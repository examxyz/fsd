Q1 Create a Node.js file that writes an HTML form, with a concatenate two string

const http = require('http');
const url = require('url');
const fs = require('fs');

// Create a server object
const server = http.createServer((req, res) => {
    // Parse the request URL
    const parsedUrl = url.parse(req.url, true);
    
    // Check if the request is for the form
    if (parsedUrl.pathname === '/') {
        // Serve the HTML form
        fs.readFile('form.html', (err, data) => {
            if (err) {
                res.writeHead(500, {'Content-Type': 'text/plain'});
                res.end('Internal Server Error');
                return;
            }
            res.writeHead(200, {'Content-Type': 'text/html'});
            res.end(data);
        });
    } else if (parsedUrl.pathname === '/concatenate') {
        // Handle form submission
        const query = parsedUrl.query;
        const str1 = query.str1 || '';
        const str2 = query.str2 || '';
        const result = str1 + str2;

        res.writeHead(200, {'Content-Type': 'text/plain'});
        res.end('Concatenated String: ' + result);
    } else {
        // Handle other requests
        res.writeHead(404, {'Content-Type': 'text/plain'});
        res.end('Not Found');
    }
});

// Specify the port to listen on
const PORT = process.env.PORT || 3000;

// Start the server
server.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});



Q2 Create a Node.js file that opens the requested file and returns the content to the client. If 
anything goes wrong, throw a 404 error


const http = require('http');
const fs = require('fs');
const path = require('path');

const server = http.createServer((req, res) => {
    // Extract the requested file path from the URL
    const filePath = path.join(__dirname, req.url);

    // Check if the requested file exists
    fs.access(filePath, fs.constants.F_OK, (err) => {
        if (err) {
            // File not found, send 404 error
            res.writeHead(404, { 'Content-Type': 'text/plain' });
            res.end('404 Not Found');
            return;
        }

        // File exists, read its content and send it to the client
        fs.readFile(filePath, (err, data) => {
            if (err) {
                // Error reading file, send 500 error
                res.writeHead(500, { 'Content-Type': 'text/plain' });
                res.end('500 Internal Server Error');
                return;
            }

            // File read successfully, send its content
            res.writeHead(200, { 'Content-Type': 'text/plain' });
            res.end(data);
        });
    });
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
