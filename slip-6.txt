Q1 Write angular JS by using ng-click directive to display an alert message after clicking the 
element
<!DOCTYPE html>
<html lang="en" ng-app="clickApp">
<head>
    <meta charset="UTF-8">
    <title>Click App</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body>

<div ng-controller="ClickController as vm">
    <button ng-click="vm.displayAlert()">Click Me</button>
</div>

<script>
angular.module('clickApp', [])
    .controller('ClickController', function() {
        var vm = this;

        vm.displayAlert = function() {
            alert('Button Clicked!');
        };
    });
</script>

</body>
</html>

Q2 Create a Node.js file that opens the requested file and returns the content to the client. If 
anything goes wrong, throw a 404 error


const http = require('http');
const fs = require('fs');
const path = require('path');

const server = http.createServer((req, res) => {
    // Extract the requested file path from the URL
    const filePath = path.join(__dirname, req.url);

    // Check if the requested file exists
    fs.access(filePath, fs.constants.F_OK, (err) => {
        if (err) {
            // File not found, send 404 error
            res.writeHead(404, { 'Content-Type': 'text/plain' });
            res.end('404 Not Found');
            return;
        }

        // File exists, read its content and send it to the client
        fs.readFile(filePath, (err, data) => {
            if (err) {
                // Error reading file, send 500 error
                res.writeHead(500, { 'Content-Type': 'text/plain' });
                res.end('500 Internal Server Error');
                return;
            }

            // File read successfully, send its content
            res.writeHead(200, { 'Content-Type': 'text/plain' });
            res.end(data);
        });
    });
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
